name: Supabase — Migrate & Seed (remote)

on:
  workflow_dispatch:
  push:
    paths:
      - "db/migrations/**"
      - "db/seeds/**"
      - ".github/workflows/sb-migrate.yml"

jobs:
  migrate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Link project (remote)
        run: supabase link --project-ref qrfvdoecpmcnlpxklcsu --password "$SUPABASE_DB_PASSWORD"
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}

      - name: Push migrations (DDL/RLS)
        # ⚠️ correção: usar --yes (não existe --non-interactive)
        run: supabase db push --yes -p "$SUPABASE_DB_PASSWORD"
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}

      - name: Seed (idempotente)
        env:
          PGHOST: db.qrfvdoecpmcnlpxklcsu.supabase.co
          PGUSER: postgres
          PGDATABASE: postgres
          PGPORT: 5432
          PGPASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
        run: |
          set -euo pipefail
          if [ -f db/seeds/2025-10-16_configs_seeds.sql ]; then
            psql "sslmode=require" -v ON_ERROR_STOP=1 -f db/seeds/2025-10-16_configs_seeds.sql || true
          fi
          if [ -f db/seeds/extra_seeds.sql ]; then
            psql "sslmode=require" -v ON_ERROR_STOP=1 -f db/seeds/extra_seeds.sql || true
          fi

      - name: Smoke checks
        env:
          PGHOST: db.qrfvdoecpmcnlpxklcsu.supabase.co
          PGUSER: postgres
          PGDATABASE: postgres
          PGPORT: 5432
          PGPASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
        run: |
          set -euo pipefail
          psql "sslmode=require" -c "SELECT current_database(), current_user, version();"
          psql "sslmode=require" -c "SELECT to_regclass('public.config_color_palettes') AS has_palettes;"
          psql "sslmode=require" -c "DO $$ BEGIN IF to_regclass('public.health_probe') IS NOT NULL THEN RAISE NOTICE 'health:%', (SELECT public.health_probe()); END IF; END $$;" || true
